
import java.awt.Color;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableRowSorter;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Saygat
 */
public class AnaEkran extends javax.swing.JFrame {

    //Değişkenlerim
    File dosya;
    String resimAd, resimAdres;
    private String url = "jdbc:derby://localhost:1527/SozlukUygulamasi", user = "sevval", password = "123";
    int SecilenSatir;
    boolean resimSecildiMi = false;
    int navigasyonSatir = -1;

    /**
     * Creates new form AnaEkran
     */
    public AnaEkran() {
        initComponents();
        TabloDoldur();
        SecileniGetir("İNGİLİZCE");
        renk();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jTextField_ARAMA = new javax.swing.JTextField();
        jComboBox_DIL = new javax.swing.JComboBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jSeparator2 = new javax.swing.JSeparator();
        jButton_ILK = new javax.swing.JButton();
        jButton_ONCEKİ = new javax.swing.JButton();
        jButton_SONRAKİ = new javax.swing.JButton();
        jButton_SON = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField_TURKCE = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField_INGILIZCE = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField_ALMANCA = new javax.swing.JTextField();
        jTextField_FRANSIZCA = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel_RESIM = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_SOZLUKAYAR = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        jComboBox_RENK = new javax.swing.JComboBox();
        jButton_RENKUYGULA = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jButton_ICERIAKTAR = new javax.swing.JButton();
        jButton_DISARIAKTAR = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jTextField_ARAMA.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField_ARAMA.setText("TÜRKÇE KELİME ARATINIZ");
        jTextField_ARAMA.setToolTipText("");
        jTextField_ARAMA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField_ARAMAMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTextField_ARAMAMouseEntered(evt);
            }
        });
        jTextField_ARAMA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_ARAMAKeyReleased(evt);
            }
        });

        jComboBox_DIL.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "İNGİLİZCE", "ALMANCA", "FRANSIZCA" }));
        jComboBox_DIL.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_DILİtemStateChanged(evt);
            }
        });
        jComboBox_DIL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_DILActionPerformed(evt);
            }
        });
        jComboBox_DIL.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jComboBox_DILPropertyChange(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TÜRKÇE", "İNGİLİZCE", "RESİM"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, javax.swing.ImageIcon.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setRowHeight(120);
        jScrollPane3.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
            jTable2.getColumnModel().getColumn(1).setResizable(false);
            jTable2.getColumnModel().getColumn(2).setResizable(false);
        }

        jButton_ILK.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton_ILK.setText("İLK ");
        jButton_ILK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ILKActionPerformed(evt);
            }
        });

        jButton_ONCEKİ.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton_ONCEKİ.setText("ÖNCEKİ");
        jButton_ONCEKİ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ONCEKİActionPerformed(evt);
            }
        });

        jButton_SONRAKİ.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton_SONRAKİ.setText("SONRAKİ");
        jButton_SONRAKİ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SONRAKİActionPerformed(evt);
            }
        });

        jButton_SON.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton_SON.setText("SON");
        jButton_SON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SONActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator2)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jTextField_ARAMA, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jComboBox_DIL, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton_ILK, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(105, 105, 105)
                        .addComponent(jButton_ONCEKİ, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(104, 104, 104)
                        .addComponent(jButton_SONRAKİ, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(105, 105, 105)
                        .addComponent(jButton_SON, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 898, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_DIL, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_ARAMA, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_ILK, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_ONCEKİ, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_SONRAKİ, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_SON, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("ANA EKRAN", jPanel1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setText("TÜRKÇE");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setText("İNGİLİZCE");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel4.setText("ALMANCA");
        jLabel4.setToolTipText("");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel5.setText("FRANSIZCA");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton1.setText("YENİ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 153));
        jButton2.setText("GÜNCELLE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 153, 51));
        jButton3.setText("EKLE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton4.setForeground(new java.awt.Color(204, 0, 0));
        jButton4.setText("SİL");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel_RESIM.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel_RESIM.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_RESIM.setText("Resim Yüklemek İçin Tıklayınız!");
        jLabel_RESIM.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel_RESIM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_RESIMMouseClicked(evt);
            }
        });

        jTable_SOZLUKAYAR.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "TÜRKÇE", "İNGİLİZCE", "ALMANCA", "FRANSIZCA", "FOTOĞRAF"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, javax.swing.ImageIcon.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_SOZLUKAYAR.setRowHeight(120);
        jTable_SOZLUKAYAR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_SOZLUKAYARMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_SOZLUKAYAR);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField_INGILIZCE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField_TURKCE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField_FRANSIZCA, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField_ALMANCA, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(53, 53, 53)
                        .addComponent(jLabel_RESIM, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                        .addGap(66, 66, 66)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(49, 49, 49))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel_RESIM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                            .addComponent(jTextField_TURKCE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField_INGILIZCE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField_ALMANCA)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField_FRANSIZCA)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("KELİME YÖNETİMİ", jPanel2);

        jComboBox_RENK.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sistem Rengi", "Mavi", "Pembe", "Mor", "Yeşil" }));

        jButton_RENKUYGULA.setText("UYGULA");
        jButton_RENKUYGULA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_RENKUYGULAActionPerformed(evt);
            }
        });

        jButton_ICERIAKTAR.setText("Excel'den Aktar");
        jButton_ICERIAKTAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ICERIAKTARActionPerformed(evt);
            }
        });

        jButton_DISARIAKTAR.setText("Excel'e Aktar");
        jButton_DISARIAKTAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DISARIAKTARActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3)
                    .addComponent(jSeparator4))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton_RENKUYGULA, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_RENK, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(150, 150, 150)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton_ICERIAKTAR, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_DISARIAKTAR, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(268, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(123, 123, 123)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_RENK, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_ICERIAKTAR, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_RENKUYGULA, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_DISARIAKTAR, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 167, Short.MAX_VALUE)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(147, 147, 147))
        );

        jTabbedPane1.addTab("AYARLAR", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel_RESIMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_RESIMMouseClicked
        // Kullanıcıya resim seçtir
        // System.out.println("Tıklandı");

        JFileChooser resimSecici = new JFileChooser();
        int secim = resimSecici.showOpenDialog(this);
        if (secim == JFileChooser.APPROVE_OPTION) {
            resimSecildiMi = true;
            dosya = resimSecici.getSelectedFile();
            resimAd = dosya.getName();
            resimAdres = dosya.getPath();
            ImageIcon resim = new ImageIcon(new ImageIcon(resimAdres).getImage().getScaledInstance(
                    200, 200, java.awt.Image.SCALE_SMOOTH));
            jLabel_RESIM.setIcon(resim);
            jLabel_RESIM.setText("");
            //System.out.println("Resim Adı:" + resimAd + " Resim Adres: " + resimAdres);

        }

    }//GEN-LAST:event_jLabel_RESIMMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //Ekleme işlemi yapar
        String TURKCE = jTextField_TURKCE.getText();
        String INGILIZCE = jTextField_INGILIZCE.getText();
        String ALMANCA = jTextField_ALMANCA.getText();
        String FRANSIZCA = jTextField_FRANSIZCA.getText();

        if (TURKCE.equals("") || INGILIZCE.equals("") || ALMANCA.equals("") || FRANSIZCA.equals("")) {
            mesaj("Lütfen Boş Alan Bırakmayın!");
        } else if (jLabel_RESIM.getText().equals("Resim Yüklemek İçin Tıklayınız!")) {
            mesaj("Lütfen Resim Yükleyiniz!");
        } else {
            try {
                //Herhangi bir hataya rastlanmadı               
                String sorgu = "INSERT INTO KELIME (TURKCE,INGILIZCE,ALMANCA,FRANSIZCA,RESIM) VALUES (?,?,?,?,?)";
                Connection bag = DriverManager.getConnection(url, user, password);
                FileInputStream fis = new FileInputStream(dosya);
                PreparedStatement ps = bag.prepareStatement(sorgu);
                ps.setString(1, TURKCE);
                ps.setString(2, INGILIZCE);
                ps.setString(3, ALMANCA);
                ps.setString(4, FRANSIZCA);
                ps.setBinaryStream(5, fis, (int) dosya.length());
                ps.executeUpdate();
                ps.close();
                fis.close();
                bag.close();
                mesaj("Kelime Başarıyla Eklendi");
                SecileniGetir(jComboBox_DIL.getSelectedItem().toString());
                Temizle();
                TabloDoldur();
                resimSecildiMi=false;
            } catch (SQLException ex) {
                mesaj(ex.toString());
            } catch (FileNotFoundException ex) {
                mesaj(ex.toString());
            } catch (IOException ex) {
                mesaj(ex.toString());
            }

        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTable_SOZLUKAYARMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_SOZLUKAYARMouseClicked
        // Veriye Tıklandığında
        SecilenSatir = jTable_SOZLUKAYAR.getSelectedRow();
        jTextField_TURKCE.setText(jTable_SOZLUKAYAR.getValueAt(SecilenSatir, 1).toString());
        jTextField_INGILIZCE.setText(jTable_SOZLUKAYAR.getValueAt(SecilenSatir, 2).toString());
        jTextField_ALMANCA.setText(jTable_SOZLUKAYAR.getValueAt(SecilenSatir, 3).toString());
        jTextField_FRANSIZCA.setText(jTable_SOZLUKAYAR.getValueAt(SecilenSatir, 4).toString());     
        ImageIcon tablodakiIcon = (ImageIcon) jTable_SOZLUKAYAR.getValueAt(SecilenSatir, 5);
        jLabel_RESIM.setIcon(new ImageIcon(tablodakiIcon.getImage().getScaledInstance(
                200, 200, java.awt.Image.SCALE_SMOOTH)));
        jLabel_RESIM.setText("");
    }//GEN-LAST:event_jTable_SOZLUKAYARMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        SecilenSatir = jTable_SOZLUKAYAR.getSelectedRow();
        if (SecilenSatir == -1) {
            mesaj("Lütfen Tablodan Bir Satır Seçiniz");
        } else {
            int ID = (Integer)  jTable_SOZLUKAYAR.getValueAt(SecilenSatir, 0);
            try {
                Connection bag = DriverManager.getConnection(url, user, password);
                PreparedStatement ps = bag.prepareStatement("DELETE FROM KELIME WHERE ID = ?");
                ps.setInt(1, ID);
                ps.executeUpdate();
                ps.close();
                bag.close();
                mesaj("Kelime Başarıyla Silindi");
                SecileniGetir(jComboBox_DIL.getSelectedItem().toString());
                Temizle();
                TabloDoldur();
            } catch (SQLException ex) {
                Logger.getLogger(AnaEkran.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Temizle
        Temizle();
        TabloDoldur();
        resimSecildiMi = false;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Güncelleme işlemini yapar
        String TURKCE = jTextField_TURKCE.getText();
        String INGILIZCE = jTextField_INGILIZCE.getText();
        String ALMANCA = jTextField_ALMANCA.getText();
        String FRANSIZCA = jTextField_FRANSIZCA.getText();
        int ID = (int) jTable_SOZLUKAYAR.getValueAt(SecilenSatir, 0);
        if (TURKCE.equals("") || INGILIZCE.equals("") || ALMANCA.equals("") || FRANSIZCA.equals("")) {
            mesaj("Lütfen Boş Alan Bırakmayın!");
        } else if (jLabel_RESIM.getText().equals("Resim Yüklemek İçin Tıklayınız!")) {
            mesaj("Lütfen Resim Yükleyiniz!");
        } else {
            
            if (resimSecildiMi) {
                try {
                //Herhangi bir hataya rastlanmadı        
                //INSERT INTO KELIME (TURKCE,INGILIZCE,ALMANCA,FRANSIZCA,RESIM) VALUES (?,?,?,?,?)
                String sorgu = "UPDATE KELIME SET TURKCE = ?, INGILIZCE = ?, ALMANCA = ?, FRANSIZCA = ?,RESIM = ? WHERE ID = ?";
                Connection bag = DriverManager.getConnection(url, user, password);
                FileInputStream fis = new FileInputStream(dosya);
                PreparedStatement ps = bag.prepareStatement(sorgu);
                ps.setString(1, TURKCE);
                ps.setString(2, INGILIZCE);
                ps.setString(3, ALMANCA);
                ps.setString(4, FRANSIZCA);
                ps.setBinaryStream(5, fis, (int) dosya.length());
                ps.setInt(6, ID);
                ps.executeUpdate();
                ps.close();
                fis.close();
                bag.close();
                mesaj("Kelime Başarıyla Güncellendi!");
                SecileniGetir(jComboBox_DIL.getSelectedItem().toString());
                Temizle();
                TabloDoldur();
                resimSecildiMi = false;
                } catch (SQLException ex) {
                    mesaj(ex.toString());
                } catch (FileNotFoundException ex) {
                    mesaj(ex.toString());
                } catch (IOException ex) {
                    mesaj(ex.toString());
                }
            } else {
                try {
                //Herhangi bir hataya rastlanmadı        
                //INSERT INTO KELIME (TURKCE,INGILIZCE,ALMANCA,FRANSIZCA,RESIM) VALUES (?,?,?,?,?)
                String sorgu = "UPDATE KELIME SET TURKCE = ?, INGILIZCE = ?, ALMANCA = ?, FRANSIZCA = ? WHERE ID = ?";
                Connection bag = DriverManager.getConnection(url, user, password);
                PreparedStatement ps = bag.prepareStatement(sorgu);
                ps.setString(1, TURKCE);
                ps.setString(2, INGILIZCE);
                ps.setString(3, ALMANCA);
                ps.setString(4, FRANSIZCA);
                ps.setInt(5, ID);
                ps.executeUpdate();
                ps.close();
                bag.close();
                mesaj("Kelime Başarıyla Güncellendi!");
                Temizle();
                TabloDoldur();
                resimSecildiMi = false;
                } catch (SQLException ex) {
                    mesaj(ex.toString());
                } 
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox_DILActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_DILActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_DILActionPerformed

    private void jTextField_ARAMAMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField_ARAMAMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_ARAMAMouseEntered

    private void jTextField_ARAMAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField_ARAMAMouseClicked
        jTextField_ARAMA.setText("");
        
    }//GEN-LAST:event_jTextField_ARAMAMouseClicked

    private void jComboBox_DILPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jComboBox_DILPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_DILPropertyChange

    private void jComboBox_DILİtemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_DILİtemStateChanged
        String secilen_dil = jComboBox_DIL.getSelectedItem().toString();
        SecileniGetir(secilen_dil);
        JTableHeader header= jTable2.getTableHeader();
        TableColumnModel colMod = header.getColumnModel();
        TableColumn tabCol = colMod.getColumn(1); 
        
        tabCol.setHeaderValue(secilen_dil);
        header.repaint(); 
    }//GEN-LAST:event_jComboBox_DILİtemStateChanged

    private void jTextField_ARAMAKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_ARAMAKeyReleased
        TableRowSorter<DefaultTableModel> tableRowSorter = new TableRowSorter<>((DefaultTableModel) jTable2.getModel());
        jTable2.setRowSorter(tableRowSorter);
        tableRowSorter.setRowFilter(RowFilter.regexFilter(jTextField_ARAMA.getText().toString()));
        if (jTextField_ARAMA.getText().toString().length() >  0) {
            jButton_ILK.setVisible(false);
            jButton_ONCEKİ.setVisible(false);
            jButton_SON.setVisible(false);
            jButton_SONRAKİ.setVisible(false);
        } else {
            jButton_ILK.setVisible(true);
            jButton_ONCEKİ.setVisible(true);
            jButton_SON.setVisible(true);
            jButton_SONRAKİ.setVisible(true);
        }
        
    }//GEN-LAST:event_jTextField_ARAMAKeyReleased

    private void jButton_SONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SONActionPerformed
        navigasyonSatir = jTable2.getRowCount()-1;
        jTable2.setRowSelectionInterval(navigasyonSatir, navigasyonSatir);
    }//GEN-LAST:event_jButton_SONActionPerformed

    private void jButton_ONCEKİActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ONCEKİActionPerformed
        if (navigasyonSatir <= 0) {
            mesaj("Kayıt Yok!");
        } else {
            navigasyonSatir--;
            jTable2.setRowSelectionInterval(navigasyonSatir, navigasyonSatir);
        }
    }//GEN-LAST:event_jButton_ONCEKİActionPerformed

    private void jButton_ILKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ILKActionPerformed
        navigasyonSatir = 0;
        jTable2.setRowSelectionInterval(navigasyonSatir, navigasyonSatir);
    }//GEN-LAST:event_jButton_ILKActionPerformed

    private void jButton_SONRAKİActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SONRAKİActionPerformed
        if (navigasyonSatir == -1) {
            jTable2.setRowSelectionInterval(0, 0);
            navigasyonSatir = 0;
        } else {
            navigasyonSatir++;
            if (navigasyonSatir > jTable2.getRowCount()-1) {
                mesaj("Kayıt yok");
            } else {
                jTable2.setRowSelectionInterval(navigasyonSatir, navigasyonSatir);
            }            
        }
    }//GEN-LAST:event_jButton_SONRAKİActionPerformed

    private void jButton_RENKUYGULAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_RENKUYGULAActionPerformed
        String renk = jComboBox_RENK.getSelectedItem().toString();
        switch (renk) {
            case "Mavi":
            jPanel3.setBackground(Color.decode("#70beff"));
            jPanel2.setBackground(Color.decode("#70beff"));
            jPanel1.setBackground(Color.decode("#70beff"));
            break;
            case "Pembe":
            jPanel3.setBackground(Color.decode("#ffd8f9"));
            jPanel2.setBackground(Color.decode("#ffd8f9"));
            jPanel1.setBackground(Color.decode("#ffd8f9"));
            break;
            case "Mor":
            jPanel3.setBackground(Color.decode("#9c00b8"));
            jPanel2.setBackground(Color.decode("#9c00b8"));
            jPanel1.setBackground(Color.decode("#9c00b8"));
            break;
            case "Yeşil":
            jPanel3.setBackground(Color.decode("#66CC00"));
            jPanel2.setBackground(Color.decode("#66CC00"));
            jPanel1.setBackground(Color.decode("#66CC00"));
            break;
            default:
            jPanel3.setBackground(null);
            jPanel2.setBackground(null);
            jPanel1.setBackground(null);
        }
        try {
            //Herhangi bir hataya rastlanmadı
            //INSERT INTO KELIME (TURKCE,INGILIZCE,ALMANCA,FRANSIZCA,RESIM) VALUES (?,?,?,?,?)
            String sorgu = "UPDATE AYARLAR SET RENK = ?  WHERE ID = 0";
            Connection bag = DriverManager.getConnection(url, user, password);
            PreparedStatement ps = bag.prepareStatement(sorgu);
            ps.setString(1, renk);
            ps.executeUpdate();
            ps.close();
            bag.close();
        } catch (SQLException ex) {
            mesaj(ex.toString());
        }
    }//GEN-LAST:event_jButton_RENKUYGULAActionPerformed

    private void jButton_DISARIAKTARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DISARIAKTARActionPerformed
        String DOSYA_ADI = System.getProperty("user.dir")+"\\src\\kelimeler.xlsx";
        XSSFWorkbook workbook = new XSSFWorkbook();
        XSSFSheet sheet = workbook.createSheet("Kelimeler");
        Object[][] kelimeler = new Object[jTable_SOZLUKAYAR.getRowCount()][6];
        kelimeler[0][0] = "ID";
        kelimeler[0][1] = "TURKCE";
        kelimeler[0][2] = "INGILIZCE";
        kelimeler[0][3] = "FRANSIZCA";
        kelimeler[0][4] = "ALMANCA";
        for (int i = 1; i < jTable_SOZLUKAYAR.getRowCount(); i++) {
            kelimeler[i][0] = jTable_SOZLUKAYAR.getValueAt(i, 0);
            kelimeler[i][1] = jTable_SOZLUKAYAR.getValueAt(i, 1);
            kelimeler[i][2] = jTable_SOZLUKAYAR.getValueAt(i, 2);
            kelimeler[i][3] = jTable_SOZLUKAYAR.getValueAt(i, 3);
            kelimeler[i][4] = jTable_SOZLUKAYAR.getValueAt(i, 4);
        }
        int satirNo = 0;
        System.out.println("excel oluşturuluyor");
        for (Object[] kelime : kelimeler) {
            Row row = sheet.createRow(satirNo++);
            int colNum = 0;
            for (Object field : kelime) {
                Cell cell = row.createCell(colNum++);
                if (field instanceof String) {
                    cell.setCellValue((String) field);
                } else if (field instanceof Integer) {
                    cell.setCellValue((Integer) field);
                }
            }
        }
        
        try {
            FileOutputStream outputStream = new FileOutputStream(DOSYA_ADI);
            workbook.write(outputStream);
            workbook.close();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }

        mesaj(System.getProperty("user.dir")+"\\src\\kelimeler.xlsx\n" + "Buraya Kaydedildi" );

    }//GEN-LAST:event_jButton_DISARIAKTARActionPerformed

    private void jButton_ICERIAKTARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ICERIAKTARActionPerformed
        
         // System.out.println("Tıklandı");

        JFileChooser resimSecici = new JFileChooser();
        int secim = resimSecici.showOpenDialog(this);
        if (secim == JFileChooser.APPROVE_OPTION) {
            dosya = resimSecici.getSelectedFile();
            ArrayList<String> turkceArrayList = new ArrayList<>();
            ArrayList<String> ingilizceArrayList = new ArrayList<>();
            ArrayList<String> fransızcaArrayList = new ArrayList<>();
            ArrayList<String> almancaArrayList = new ArrayList<>();
            String DOSYA_ADI = dosya.getPath().toString();
            try {

                FileInputStream excelFile = new FileInputStream(new File(DOSYA_ADI));
                Workbook workbook = new XSSFWorkbook(excelFile);
                Sheet datatypeSheet = workbook.getSheetAt(0);
                Iterator<Row> iterator = datatypeSheet.iterator();

                while (iterator.hasNext()) {

                    Row currentRow = iterator.next();
                    Iterator<Cell> cellIterator = currentRow.iterator();
                    int cell = 0;
                    while (cellIterator.hasNext()) {
                        Cell currentCell = cellIterator.next();
                        if (cell == 0) {
                            turkceArrayList.add(currentCell.getStringCellValue().toString());
                        } else if (cell == 1) {
                            ingilizceArrayList.add(currentCell.getStringCellValue().toString());
                        } else if (cell == 2) {
                            almancaArrayList.add(currentCell.getStringCellValue().toString());
                        } else if (cell == 3) {
                            fransızcaArrayList.add(currentCell.getStringCellValue().toString());
                        }
                        cell++;
                    }                    
                }
                for (int i = 1; i < turkceArrayList.size(); i++) {
                 
                try {    
                    File resimDosya = new File(System.getProperty("user.dir")+"\\src\\noimage.png");     
                    String sorgu = "INSERT INTO KELIME (TURKCE,INGILIZCE,ALMANCA,FRANSIZCA,RESIM) VALUES (?,?,?,?,?)";
                    Connection bag = DriverManager.getConnection(url, user, password);
                    FileInputStream fis = new FileInputStream(resimDosya);
                    PreparedStatement ps = bag.prepareStatement(sorgu);
                    ps.setString(1, turkceArrayList.get(i));
                    ps.setString(2, ingilizceArrayList.get(i));
                    ps.setString(3, almancaArrayList.get(i));
                    ps.setString(4, fransızcaArrayList.get(i));
                    ps.setBinaryStream(5, fis, (int) resimDosya.length());
                    ps.executeUpdate();
                    ps.close();
                    fis.close();
                    bag.close();
                    mesaj("Kelimeler Başarıyla Eklendi");
                    SecileniGetir(jComboBox_DIL.getSelectedItem().toString());
                    Temizle();
                    TabloDoldur();
                } catch (SQLException ex) {
                    mesaj(ex.toString());
                } catch (FileNotFoundException ex) {
                    mesaj(ex.toString());
                } catch (IOException ex) {
                    mesaj(ex.toString());
                }
                    
                    
                    
                    
                }
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            }        
            
            

        }
        
        
        
        
        
        
    }//GEN-LAST:event_jButton_ICERIAKTARActionPerformed
 
    //Metodlarım
    
    public void renk() {
         try {
            Connection bag = DriverManager.getConnection(url, user, password);
            Statement sorgu = bag.createStatement();
            ResultSet sonuc = sorgu.executeQuery("SELECT * FROM AYARLAR WHERE ID = 0 ");
            int sütun = sonuc.getMetaData().getColumnCount();
            while (sonuc.next()) {
                Object[] satir = new Object[sütun];
                for (int i = 2; i <= sütun; i++) {
                    
                        String renk = sonuc.getObject(i).toString();
                        jComboBox_RENK.setSelectedItem(renk);
                        switch (renk) {
                            case "Mavi":
                                jPanel3.setBackground(Color.decode("#70beff"));
                                jPanel2.setBackground(Color.decode("#70beff"));
                                jPanel1.setBackground(Color.decode("#70beff"));
                                jComboBox_RENK.setSelectedItem(renk);
                                break;
                            case "Pembe":
                                jPanel3.setBackground(Color.decode("#ffd8f9"));
                                jPanel2.setBackground(Color.decode("#ffd8f9"));
                                jPanel1.setBackground(Color.decode("#ffd8f9"));
                                break;
                            case "Mor":
                                jPanel3.setBackground(Color.decode("#9c00b8"));
                                jPanel2.setBackground(Color.decode("#9c00b8"));
                                jPanel1.setBackground(Color.decode("#9c00b8"));
                                break;
                            case "Yeşil":
                                jPanel3.setBackground(Color.decode("#66CC00"));
                                jPanel2.setBackground(Color.decode("#66CC00"));
                                jPanel1.setBackground(Color.decode("#66CC00"));
                                break;  
                            default:
                                jPanel3.setBackground(null);
                                jPanel2.setBackground(null);
                                jPanel1.setBackground(null);
                        }                    
                }
                
            }
            bag.close();
        } catch (SQLException ex) {
            Logger.getLogger(AnaEkran.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void mesaj(String mesaj) {
        JOptionPane.showMessageDialog(this, mesaj);
    }

    public void TabloDoldur() {
        ((DefaultTableModel) jTable_SOZLUKAYAR.getModel()).setRowCount(0);
        try {
            Connection bag = DriverManager.getConnection(url, user, password);
            Statement sorgu = bag.createStatement();
            ResultSet sonuc = sorgu.executeQuery("SELECT * FROM KELIME");
            int sütun = sonuc.getMetaData().getColumnCount();
            while (sonuc.next()) {
                Object[] satir = new Object[sütun];
                for (int i = 1; i <= sütun; i++) {
                    if (i == sütun) {                        
                        ImageIcon VeritabanindakiIcon = new ImageIcon(sonuc.getBytes(i));
                        satir[i - 1] = (new ImageIcon(VeritabanindakiIcon.getImage().getScaledInstance(
                                110, 110, java.awt.Image.SCALE_SMOOTH)));                        
                    } else {
                        satir[i - 1] = sonuc.getObject(i);
                    }
                    
                }
                ((DefaultTableModel) jTable_SOZLUKAYAR.getModel()).insertRow(sonuc.getRow() - 1, satir);
            }
            bag.close();
        } catch (SQLException ex) {
            Logger.getLogger(AnaEkran.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void Temizle() {
        jTextField_TURKCE.setText("");
        jTextField_INGILIZCE.setText("");
        jTextField_ALMANCA.setText("");
        jTextField_FRANSIZCA.setText("");
        jLabel_RESIM.setText("Resim Yüklemek İçin Tıklayınız!");
        jLabel_RESIM.setIcon(null);
    }
    
    public void SecileniGetir(String secilendil) {
        if (secilendil.equals("İNGİLİZCE")) {           
            
            ((DefaultTableModel) jTable2.getModel()).setRowCount(0);
            try {
                Connection bag = DriverManager.getConnection(url, user, password);
                Statement sorgu = bag.createStatement();
                ResultSet sonuc = sorgu.executeQuery("SELECT TURKCE,INGILIZCE,RESIM FROM KELIME");
                int sütun = sonuc.getMetaData().getColumnCount();
                while (sonuc.next()) {
                    Object[] satir = new Object[sütun];
                    for (int i = 1; i <= sütun; i++) {
                        if (i == sütun) {                        
                            ImageIcon VeritabanindakiIcon = new ImageIcon(sonuc.getBytes(i));
                            satir[i - 1] = (new ImageIcon(VeritabanindakiIcon.getImage().getScaledInstance(
                                    110, 110, java.awt.Image.SCALE_SMOOTH)));                        
                        } else {
                            satir[i - 1] = sonuc.getObject(i);
                        }

                    }
                    ((DefaultTableModel) jTable2.getModel()).insertRow(sonuc.getRow() - 1, satir);
                }
                bag.close();
            } catch (SQLException ex) {
                Logger.getLogger(AnaEkran.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        
        } else if (secilendil.equals("ALMANCA")) {
                ((DefaultTableModel) jTable2.getModel()).setRowCount(0);
                try {
                    Connection bag = DriverManager.getConnection(url, user, password);
                    Statement sorgu = bag.createStatement();
                    ResultSet sonuc = sorgu.executeQuery("SELECT TURKCE,ALMANCA,RESIM FROM KELIME");
                    int sütun = sonuc.getMetaData().getColumnCount();
                    while (sonuc.next()) {
                        Object[] satir = new Object[sütun];
                        for (int i = 1; i <= sütun; i++) {
                            if (i == sütun) {                        
                                ImageIcon VeritabanindakiIcon = new ImageIcon(sonuc.getBytes(i));
                                satir[i - 1] = (new ImageIcon(VeritabanindakiIcon.getImage().getScaledInstance(
                                        110, 110, java.awt.Image.SCALE_SMOOTH)));                        
                            } else {
                                satir[i - 1] = sonuc.getObject(i);
                            }

                        }
                        ((DefaultTableModel) jTable2.getModel()).insertRow(sonuc.getRow() - 1, satir);
                    }
                    bag.close();
                } catch (SQLException ex) {
                    Logger.getLogger(AnaEkran.class.getName()).log(Level.SEVERE, null, ex);
                }
        } else {
                ((DefaultTableModel) jTable2.getModel()).setRowCount(0);
                try {
                    Connection bag = DriverManager.getConnection(url, user, password);
                    Statement sorgu = bag.createStatement();
                    ResultSet sonuc = sorgu.executeQuery("SELECT TURKCE,FRANSIZCA,RESIM FROM KELIME");
                    int sütun = sonuc.getMetaData().getColumnCount();
                    while (sonuc.next()) {
                        Object[] satir = new Object[sütun];
                        for (int i = 1; i <= sütun; i++) {
                            if (i == sütun) {                        
                                ImageIcon VeritabanindakiIcon = new ImageIcon(sonuc.getBytes(i));
                                satir[i - 1] = (new ImageIcon(VeritabanindakiIcon.getImage().getScaledInstance(
                                        110, 110, java.awt.Image.SCALE_SMOOTH)));                        
                            } else {
                                satir[i - 1] = sonuc.getObject(i);
                            }

                        }
                        ((DefaultTableModel) jTable2.getModel()).insertRow(sonuc.getRow() - 1, satir);
                    }
                    bag.close();
                } catch (SQLException ex) {
                    Logger.getLogger(AnaEkran.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AnaEkran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AnaEkran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AnaEkran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AnaEkran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AnaEkran().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton_DISARIAKTAR;
    private javax.swing.JButton jButton_ICERIAKTAR;
    private javax.swing.JButton jButton_ILK;
    private javax.swing.JButton jButton_ONCEKİ;
    private javax.swing.JButton jButton_RENKUYGULA;
    private javax.swing.JButton jButton_SON;
    private javax.swing.JButton jButton_SONRAKİ;
    private javax.swing.JComboBox jComboBox_DIL;
    private javax.swing.JComboBox jComboBox_RENK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel_RESIM;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable_SOZLUKAYAR;
    private javax.swing.JTextField jTextField_ALMANCA;
    private javax.swing.JTextField jTextField_ARAMA;
    private javax.swing.JTextField jTextField_FRANSIZCA;
    private javax.swing.JTextField jTextField_INGILIZCE;
    private javax.swing.JTextField jTextField_TURKCE;
    // End of variables declaration//GEN-END:variables
}
